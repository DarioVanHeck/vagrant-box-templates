---
- hosts: 127.0.0.1
  connection: local
  sudo: true
  vars:
    - virtualbox_guest_additions_dl_url: "http://download.virtualbox.org/virtualbox/{{ virtualbox_guest_additions_ver }}/"
    - virtualbox_guest_additions_iso: "VBoxGuestAdditions_{{ virtualbox_guest_additions_ver }}.iso"
    - virtualbox_guest_additions_ver: 5.0.4
#  vars_files:
  roles:
  tasks:
    - name: ensuring vagrant user password is set to vagrant
      user: name=vagrant password=$6$QBZMhBvDPSa$Enq3PR3lKG31hPog47YYK8j/g59eHFhdS0x9frxRLbK8KKXhLTZNExeCewiU7JPkUX7bVU5mTIYQX2guDvIJt.

    - name: adding vagrant user to sudoers
      lineinfile: dest=/etc/sudoers regexp='^vagrant ALL' line='vagrant ALL=(ALL) NOPASSWD:ALL' validate='visudo -cf %s' state=present

    - name: updating apt cache
      apt: update_cache=yes
      when: ansible_os_family == "Debian"

    - name: installing pre-reqs
      apt: name={{ item }} state=present
      with_items:
        - "linux-headers-{{ ansible_kernel }}"
        - aptitude
        - build-essential
        - curl
        - dkms
        - facter
        - libreadline-gplv2-dev
        - libssl-dev
        - openssh-server
        - unzip
        - wget
        - zlib1g-dev
      when: ansible_os_family == "Debian"

    - name: updating all packages to the latest
      apt: upgrade=safe
      when: ansible_os_family == "Debian"

    - name: creating build time
      shell: date > /etc/vagrant_box_build_time

    - name: creating vagrant ssh folder
      file: path=/home/vagrant/.ssh state=directory owner=vagrant group=vagrant mode=0700

    - name: downloading vagrant insecure ssh keys
      get_url: url=https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub dest=/home/vagrant/.ssh/authorized_keys validate_certs=no

    - name: setting permissions on authorized_keys
      file: path=/home/vagrant/.ssh/authorized_keys owner=vagrant group=vagrant mode=0600

    - name: setting permissions on vagrants ssh folder
      file: path=/home/vagrant/.ssh owner=vagrant group=vagrant state=directory recurse=yes

    - name: setting MOTD
      shell: echo 'Development Environment' > /etc/motd

    - name: downloading virtualbox guest additions
      get_url: url="{{ virtualbox_guest_additions_dl_url }}/{{ virtualbox_guest_additions_iso }}" dest="/home/vagrant/{{ virtualbox_guest_additions_iso }}"

    - name: mounting VirtualBoxAdditions ISO
      mount: name=/mnt/virtualbox src="/home/vagrant/{{ virtualbox_guest_additions_iso }}" fstype=iso9660 state=mounted

    - name: installing VirtualBoxAdditions
      shell: sh /mnt/virtualbox/VBoxLinuxAdditions.run

    - name: creating VirtualBoxAdditions symlink
      file: src="/opt/VBoxGuestAdditions-{{ virtualbox_guest_additions_ver }}/lib/VBoxGuestAdditions" dest=/usr/lib/VBoxGuestAdditions state=link

    - name: cleaning up dhcp leases
      file: path=/var/lib/dhcp/ state=directory recurse=yes

    - name: ensuring dhcp lib folder exists
      file: path=/var/lib/dhcp state=directory

    - name: Making sure Udev doesn't block our network
      file: path={{ item }} state=absent
      with_items:
        - /dev/.udev/
        - /etc/udev/rules.d/70-persistent-net.rules
        - /lib/udev/rules.d/75-persistent-net-generator.rules

    - name: creating folders
      file: path={{ item }} state=directory
      with_items:
        - /etc/udev/rules.d/70-persistent-net.rules

    - name: Adding a 2 sec delay to the interface up, to make the dhclient happy
      lineinfile: dest=/etc/network/interfaces regexp="^pre-up sleep 2" line="pre-up sleep 2" insertafter=EOF

#    - name: Zero out the free space to save space in the final image
#      shell: "dd if=/dev/zero of=/EMPTY bs=1M"
#      ignore_errors: true

#    - name: removing EMPTY folder
#      file: path=/EMPTY state=absent

#    - name: pausing for space to clear up
#      pause: seconds=15

    - name: removing Bash history
      file: path=/home/vagrant/.bash_history state=absent
